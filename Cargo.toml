[package]
name = "porcle"
authors = ["Jiří H. <jiri@bacehub.de>"]
version = "0.1.0"
edition = "2024"

[dependencies]
# avian2d = "0.2.1"
avian2d = { git = "https://github.com/Jondolf/avian", rev = "910ab042828986e27f32fc2e27f6f2ee5576df1e" }
bevy = { version = "0.16.0", features = ["wayland"] }
bevy-inspector-egui = { version = "0.31.0", optional = true }
# bevy_asset_loader = { version = "0.23.0", features = ["2d"] }
bevy_asset_loader = { git = "https://github.com/NiklasEi/bevy_asset_loader", rev = "ef87931d799405a7584a7282a8f2beade905e5ff", features = [
    "2d",
] }
bevy_enoki = "0.4.0"
bevy_trauma_shake = "0.5.0"
bevy_tweening = { git = "https://github.com/meepleek/bevy_tweening.git", rev = "2e0742b11311feecc6eff3e583c54e738b2e67f7" }
# leafwing-input-manager = "0.17.0"
leafwing-input-manager = { git = "https://github.com/Leafwing-Studios/leafwing-input-manager", rev = "f337a7fa900bf8706f5afc7d15cf13101606d0ea" }
# Compile low-severity logs out of native builds for performance.
log = { version = "0.4", features = [
    "max_level_debug",
    "release_max_level_warn",
] }
# Compile low-severity logs out of web builds for performance.
tracing = { version = "0.1", features = [
    "max_level_debug",
    "release_max_level_warn",
] }
paste = "1.0.15"
rand = "0.8"

[features]
default = [
    # Default to a native dev build.
    "dev_native",
]
dev = [
    # Improve compile times for dev builds by linking Bevy as a dynamic library.
    "bevy/dynamic_linking",
    "bevy/bevy_dev_tools",
    "bevy/bevy_ui_debug",
    "bevy-inspector-egui",
    # Improve error messages coming from Bevy
    "bevy/track_location",
]
dev_native = [
    "dev",
    # Enable asset hot reloading for native dev builds.
    "bevy/file_watcher",
    # Enable embedded asset hot reloading for native dev builds.
    "bevy/embedded_watcher",
]

[package.metadata.bevy_cli.release]
# Disable debug functionality in release builds.
default_features = false

[package.metadata.bevy_cli.web]
# Tell the random providing crates to use the wasm_js backend on Web.
rustflags = ["--cfg", "getrandom_backend=\"wasm_js\""]

[package.metadata.bevy_cli.web.dev]
# Disable native-only debug functionality in web builds.
default_features = false
features = ["dev"]

# Idiomatic Bevy code often triggers these lints, and the CI workflow treats them as errors.
# In some cases they may still signal poor code quality however, so consider commenting out these lines.
[lints.clippy]
# Bevy supplies arguments to systems via dependency injection, so it's natural for systems to
# request more than 7 arguments -- which triggers this lint.
too_many_arguments = "allow"
# Queries that access many components may trigger this lint.
type_complexity = "allow"
# Make sure macros use their standard braces, such as `[]` for `bevy_ecs::children!`.
nonstandard_macro_braces = "warn"

# Compile with Performance Optimizations:
# https://bevyengine.org/learn/quick-start/getting-started/setup/#compile-with-performance-optimizations

# Enable a small amount of optimization in the dev profile.
[profile.dev]
opt-level = 1

# Enable a large amount of optimization in the dev profile for dependencies.
[profile.dev.package."*"]
opt-level = 3

# Remove expensive debug assertions due to <https://github.com/bevyengine/bevy/issues/14291>
[profile.dev.package.wgpu-types]
debug-assertions = false

# The default profile is optimized for Wasm builds because
# that's what [Trunk reads](https://github.com/trunk-rs/trunk/issues/605).
# Optimize for size in the wasm-release profile to reduce load times and bandwidth usage on web.
[profile.release]
# Compile the entire crate as one unit.
# Slows compile times, marginal improvements.
codegen-units = 1
# Do a second optimization pass over the entire program, including dependencies.
# Slows compile times, marginal improvements.
lto = "thin"

# This profile will be used for `bevy run web` automatically
[profile.web-release]
# Default to release profile values.
inherits = "release"
# Optimize with size in mind (also try "z", sometimes it is better).
# Slightly slows compile times, great improvements to file size and runtime performance.
opt-level = "s"
# Strip all debugging information from the binary to slightly reduce file size.
strip = "debuginfo"
